<Window x:Class="Bibliothek.Author"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Bibliothek"
        mc:Ignorable="d"
        Title="Autor" Height="620" Width="800" Background="#FF9AC8CD" MaxWidth="900" MaxHeight="800" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch">

    <Window.Resources>
        <!-- Style für den Fokus´Effekt eines Buttons -->
        <Style x:Key="ButtonFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Hintergrund eines Buttons im Normalzustand -->
        <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#F3F3F3" Offset="0"/>
            <GradientStop Color="#EBEBEB" Offset="0.5"/>
            <GradientStop Color="#DDDDDD" Offset="0.5"/>
            <GradientStop Color="#CDCDCD" Offset="1"/>
        </LinearGradientBrush>

        <!--  Rahmen eines Buttons im Normalzustand -->
        <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>

        <!-- Style für einen ToggleButton -->
        <Style x:Key="ToggleButtonStyle1" TargetType="{x:Type ToggleButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ButtonNormalBackground}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ButtonNormalBorder}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <StackPanel Orientation="Horizontal">
                            <!-- Inhalt des ToggleButtons -->
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            <Border x:Name="on" Width="100" Height="25" Background="#aacecece" CornerRadius="2,0,0,4" Margin="10,0,0,0">
                                <TextBlock x:Name="onText" Text="Bearbeiten" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                            <Border x:Name="off" Width="100" Height="25" Background="#aacecece" CornerRadius="0,2,4,0">
                                <TextBlock x:Name="offText" Text="Hinzufügen" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                            </Border>
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <!-- Trigger für deaktivierten Zustand -->
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="#ADADAD"/>
                            </Trigger>
                            <!-- Trigger für aktivierten Zustand -->
                            <Trigger Property="IsChecked" Value="true">
                                <Setter TargetName="on" Property="Background" Value="#1E0342"/>
                                <Setter TargetName="onText" Property="Foreground" Value="White"/>
                            </Trigger>
                            <!-- Trigger für deaktivierten -->
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="off" Property="Background" Value="#1E0342"/>
                                <Setter TargetName="offText" Property="Foreground" Value="White"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Style für Buttons -->
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="#1E0342"/>
            <Setter Property="Foreground" Value="#FFE1F7F5"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="5"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="BorderBrush" Value="#A0DEFF"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}"
                                CornerRadius="10">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>

    <Grid>
        <!-- Hintergrund des Fensters -->
        <Border Background="#FFE1F7F5" CornerRadius="20" Margin="20">
            <StackPanel Orientation="Vertical">
                <!-- ToggleButton für Bearbeiten oder Hinzufügen von Autoren -->
                <ToggleButton x:Name="tglBtn_addOrEditAuthor" Margin="20" Checked="OnAddOrEditAuthor" Unchecked="OnAddOrEditAuthor" Style="{StaticResource ToggleButtonStyle1}"/>


                <Border Background="#aacecece" CornerRadius="20" Margin="20" HorizontalAlignment="Center">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <!-- Suchfeld für Autoren -->
                    <StackPanel Margin="15">
                        <Label Content="Suchen"/>
                        <TextBox x:Name="searchAuthorTextBox" Width="200" FontSize="20" TextChanged="onAuthorSearchChange"/>
                    </StackPanel>

                    <!-- Textfeld für Vollname des Autors -->
                    <StackPanel Margin="15">
                        <Label Content="Vollname"/>
                        <TextBox x:Name="addorEditAuthorTextBox" Width="200" FontSize="20"/>
                    </StackPanel>

                    
                    <Button x:Name="addOrEditAuthorBtn" Margin="20" VerticalAlignment="Bottom" Content="Hinzufügen" Style="{StaticResource ButtonStyle}" Width="100" Height="40" Click="onAuthorAddOrEditClicked"/>
                </StackPanel>
        </Border>
        <!-- DataGrid zur Anzeige der Autoren -->
                <Border Background="#aacecece" CornerRadius="20" Margin="20" HorizontalAlignment="Center">

                    <DataGrid x:Name="AuthorsDataGrid" AutoGenerateColumns="False" HorizontalAlignment="Center" VerticalAlignment="Bottom" MaxHeight="120" Margin="20" SelectionChanged="AuthorDataGrid_SelectionChanged" IsReadOnly="True" ScrollViewer.VerticalScrollBarVisibility="Visible">
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="ID" Binding="{Binding ID}" Visibility="Collapsed"/>
                        <DataGridTextColumn Header="Vollname" Width="300" Binding="{Binding FullName}"/>
                    </DataGrid.Columns>
                </DataGrid>
                </Border>
            </StackPanel>
        </Border>
    </Grid>
</Window>


